{"version":3,"sources":["List.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["List","list","delHandler","editTask","completedTask","className","style","color","length","map","title","desc","id","completed","Date","toLocaleDateString","onClick","size","Alert","msg","type","removeModal","useEffect","timeout","setTimeout","clearTimeout","App","useState","setTitle","setDesc","localStorage","getItem","JSON","parse","setList","show","model","setModel","isEditing","setIsEditing","editId","setEditId","showModal","setItem","stringify","onSubmit","e","preventDefault","item","task","getTime","toString","name","placeholder","value","onChange","target","autoComplete","margin","window","confirm","newList","filter","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99d1a40a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FaEdit,FaTrash,FaCheckCircle} from 'react-icons/fa'\r\n\r\n\r\nconst List = ({list,delHandler,editTask,completedTask})=>{\r\n  \r\n    return (\r\n       <section className=\"tasks-container\">\r\n           <div className=\"to-do-list\">\r\n               <div><h1 style={{color:\"#00bcd4\"}}>{list.length?\"To-Do-Tasks\":\"NO TASK TO DISPLAY (Add Task)\"}</h1></div>\r\n                  \r\n                 {list.map((list)=>{\r\n                   const {title,desc,id,completed} = list;\r\n                   \r\n                   \r\n                   return(\r\n                     <div className=\"task-container\" key={id}>\r\n                     { completed && <h4 className=\"time\">{`Task Completed on ${new Date().toLocaleDateString()}`}</h4>}\r\n                       <h1>{title}</h1>\r\n                       <p>{desc}</p>\r\n                        <div className= \"btn-container\">\r\n                       <button id=\"delBtn\" onClick={()=>{delHandler(id)}}><FaTrash size=\"1.5rem\"/><br/>Delete</button>\r\n                       <button id=\"editBtn\" onClick={()=>{editTask(id)}} style={{color : 'blue'}}><FaEdit size=\"1.5rem\" /><br/>Edit</button>\r\n                       <button id=\"comBtn\" onClick={()=>{completedTask(id)}} style={{color : 'green'}}><FaCheckCircle size=\"1.5rem\" /><br/>{completed?\"Undo\":\"Completed\"}</button>\r\n                        </div>\r\n\r\n                      \r\n                     </div>\r\n                   )\r\n                 })}\r\n           </div>\r\n         </section>\r\n    )\r\n};\r\n\r\nexport default List;","import React, { useEffect } from 'react';\r\n// import List from './List';\r\n\r\n\r\nconst Alert = ({list,msg,type,removeModal})=>{\r\n    useEffect(()=>{\r\n       const timeout =  setTimeout(()=>{removeModal()},2000)\r\n        return ()=> clearTimeout(timeout)\r\n    },[list,removeModal])\r\n    return (\r\n        <p className = {`model ${type}`}>{msg}</p>\r\n    )\r\n};\r\n\r\nexport default Alert;","import {React,useState,useEffect}from \"react\"\nimport List from './List'\nimport {MdAddBox} from 'react-icons/md'\nimport Alert from './Alert'\n\nconst getLocalStorage = () =>{\n  let list = localStorage.getItem('list');\n  if(list){\n    return JSON.parse(localStorage.getItem('list'))\n  }\n  else{\n    return []\n  }\n} \n\n\nfunction App() {\n    const [title,setTitle] = useState('')\n    const [desc,setDesc] = useState('')\n    const [list,setList] = useState(getLocalStorage())\n    const [model,setModel] = useState({show:false,msg:'',type:''})\n    const [isEditing,setIsEditing] = useState(false)\n    const [editId,setEditId] = useState(null)\n    const completed = false\n    \n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(!title){\n           showModal(true,\"please Enter The Task Title\",\"danger\")\n        }\n        else if(title && isEditing){\n             setList(list.map((item)=>{\n               if(item.id===editId){\n                 return {...item,title,desc}\n               }\n               return item\n             })\n             )\n             showModal(true,\"Task Edited\",\"sucess\")\n             setIsEditing(false)\n             setTitle('')\n             setDesc('')\n             setEditId(null)\n            }\n        else{\n          const task = {title,desc,completed,id:new Date().getTime().toString()}\n          setList((list)=>{\n              return [...list,task];\n          })\n          showModal(true,\"Task Added\",\"sucess\")\n          setTitle('');\n          setDesc('');\n      \n        }\n      };\n\n      const showModal = (show=false,msg='',type='')=>{\n        setModel({show,msg,type})\n      }\n       \n    const delHandler = (id)=>{\n     \n    if(window.confirm(\"Are You Sure You Want To Delete The Task\")){\n       const newList = list.filter((task)=>task.id!==id)\n         setList(newList)\n         showModal(true,\"Task Deleted\",\"danger\")\n    }\n    }\n   \n    const editTask = (id)=>{\n          const task = list.find(item=>item.id===id)\n          setIsEditing(true)\n          setEditId(id)\n          setTitle(task.title)\n          setDesc(task.desc)\n    }\n   \n    const completedTask = (id)=>{ \n       setList(\n         list.map(item=>{\n           if(item.id===id){\n              return {...item,completed:!item.completed,}\n           }\n           return item\n         }\n         )\n       )\n        }\n    \n\n   useEffect(()=>{\n     localStorage.setItem('list',JSON.stringify(list))\n   },[list])\n\n  return (\n  <>\n  <div className=\"container\">\n    <div className=\"container-inner\">\n      \n      <div className=\"header\">\n         <h1>TASK APP</h1>\n      </div>\n      \n       <div id='form-container'> \n        <form onSubmit={handleSubmit} >\n              <input type=\"text\" name = \"task-title\" id='task-title'\n             placeholder='Task Title' value={title} onChange={(e)=>setTitle(\n                 e.target.value\n             )} autoComplete=\"off\"/>\n            <input type=\"text\" name = \"task-desc\" id=\"task-desk\"\n             placeholder = 'Task Describtion' value = {desc} onChange={(e)=>{setDesc(e.target.value)}} autoComplete=\"off\"/>\n            <button type=\"submit\"><MdAddBox size=\"2rem\" margin=\"none\"/><br/>{isEditing?\"Edit Task\":\"Add Task\"}</button>\n        </form>\n        </div>\n        {model.show  && <Alert {...model} removeModal = {showModal} list={list}/>}\n     <List list={list} delHandler={delHandler} editTask={editTask} completedTask={completedTask} completed={completed} />\n    </div>\n  </div>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  \"./App.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}